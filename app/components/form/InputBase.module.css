label[for] {
  cursor: pointer;
}

.input {
  --tw-shadow: 0 1px 2px 0 rgba(0, 0, 0, .05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);

  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(.4, 0, .2, 1);
  transition-duration: .15s;

  display: flex;

  width: 100%;
  height: 2.25rem;
  max-width: 70dvw;

  font-size: .875rem;
  line-height: 1.25rem;

  padding-top: .25rem;
  padding-bottom: .25rem;
  padding-left: .75rem;
  padding-right: .75rem;

  background-color: hsl(var(--input));
  border-color: hsl(var(--border));
  border-width: 1px;
  border-radius: calc(var(--radius) - 2px);
  color: hsl(var(--foreground));
}

.input:focus,
.input:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-color: hsl(var(--ring));
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.input:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

.error {
  width: 100%;
  color: hsl(var(--destructive))
}